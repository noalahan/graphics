var g_map = [
  [
    5, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 3, 3, 4, 6,
  ],
  [
    4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 4,
  ],
  [
    3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 0, 3,
  ],
  [
    3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 2, 0, 3,
  ],
  [
    2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,
    2, 2, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,
    0, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
    2, 0, 2, 0, 0, 0, 2,
  ],
  [
    2, 0, 2, 0, 0, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0,
    2, 0, 2, 2, 2, 0, 2,
  ],
  [
    2, 0, 2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0,
    2, 2, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 2, 0, 2, 0, 2,
  ],
  [
    2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 2, 0, 2,
  ],
  [
    3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 2, 0, 3,
  ],
  [
    3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 0, 3,
  ],
  [
    4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 4,
  ],
  [
    5, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 0, 3, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 3, 3, 4, 6,
  ],
];

function drawMap() {
  for (x = 0; x < 32; x++) {
    for (y = 0; y < 32; y++) {
      let a = g_map[x][y];
      if (a > 0) {
        var body = new Cube();
        body.textureNum = a;
        body.matrix.rotate(-40, 0, 1, 0);
        body.matrix.translate(0, 0.25 * a, 0);
        body.matrix.scale(0.5, 0.5 * a, 0.5);
        body.matrix.translate(x - 15.5, 0, y - 15.5);
        body.render();
      }
      if (x == 31 && (y == 15 || y == 16)) {
        var body = new Cube();
        body.textureNum = 1;
        body.matrix.rotate(-40, 0, 1, 0);
        body.matrix.scale(0.5, 0.5, 0.5);
        body.matrix.translate(x - 15.5, 3, y - 15.5);
        body.render();
      }
    }
  }
}

function editMap(i, dir) {
    let x = g_eye.x, y = g_eye.z;
    let startX = Math.round(31 - (x * 2 + 15.5));
    let startY = Math.round(31 - (y * 2 + 15.5));
    let dirX = dir.x, dirY = dir.z;
    
    console.log("start: "+startX+" "+startY);

    let mapX, mapY, roundX, roundY, block;
    let hit = false;
    while(!hit){
        mapX = 31 - (x * 2 + 15.5);
        mapY = 31 - (y * 2 + 15.5);
        roundX = Math.round(mapX);
        roundY = Math.round(mapY);
        if (roundX > 40  || roundX < -10 || roundY > 40 || roundY < -10){
            hit = true;
            console.log("Failed to edit map. Out of range");
        }
        if (roundX < 32 && roundX > -1 && roundY < 32 && roundY > -1){
            block = g_map[roundX][roundY]
            // if not breaking an empty block & not building on current block
            if (!(i < 0 && block == 0) && !(i > 0 && (roundX == startX || roundY == startY))){
                hit = true;
                if (!(i > 0 && block > 5)){
                    g_map[roundX][roundY] += i;
                    console.log("break: "+roundX+" "+roundY);
                }
            }
        }
        x += dirX;
        y += dirY;
        // hit = true;
    }

    // if ()
    // console.log("g_map["+mapX+"]["+mapY+"]");
}
